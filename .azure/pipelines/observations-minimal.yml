trigger:
  branches:
    include:
    - main

variables:
  gcpProjectId: 'mapp-dev-457512'
  gcpRegion: 'us-central1'
  artifactRegistryRepo: 'mapp-docker-repo'
  cloudRunService: 'cr-observations'
  dockerImageName: 'observations-api'
  dockerTag: '$(Build.BuildNumber)'
  fullImageName: '$(gcpRegion)-docker.pkg.dev/$(gcpProjectId)/$(artifactRegistryRepo)/$(dockerImageName):$(dockerTag)'

jobs:
- job: Deploy
  displayName: 'Minimal Deploy to Cloud Run'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: DownloadSecureFile@1
    name: gcpServiceAccount
    inputs:
      secureFile: 'mapp-dev-457512-service-account.json'

  # Use pre-installed gcloud (Ubuntu latest has gcloud pre-installed)
  - script: |
      # Authenticate
      gcloud auth activate-service-account --key-file=$(gcpServiceAccount.secureFilePath)
      gcloud config set project $(gcpProjectId)
      gcloud auth configure-docker $(gcpRegion)-docker.pkg.dev --quiet
      echo "âœ… Authentication complete"
    displayName: 'Quick GCP Auth'

  # Build and deploy in one step
  - script: |
      # Build image
      docker build -f src/Services/MAPP.Services.Observations/Dockerfile -t $(fullImageName) .
      
      # Push image
      docker push $(fullImageName)
      
      # Deploy to Cloud Run
      gcloud run deploy $(cloudRunService) \
        --image $(fullImageName) \
        --region $(gcpRegion) \
        --allow-unauthenticated \
        --port 8080 \
        --memory 2Gi \
        --set-env-vars="ASPNETCORE_ENVIRONMENT=Production,DATABASE_CONNECTION_STRING=$(DATABASE_CONNECTION_STRING),PubSub__ProjectId=$(gcpProjectId),PubSub__EnablePublishing=true" \
        --quiet
      
      # Get URL
      SERVICE_URL=$(gcloud run services describe $(cloudRunService) --region=$(gcpRegion) --format='value(status.url)')
      echo "ðŸš€ Deployed to: $SERVICE_URL"
    displayName: 'Build and Deploy'
